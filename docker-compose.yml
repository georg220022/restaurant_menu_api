version: '3.3'

services:
  web:
    container_name: web
    build:
      context: app/
      dockerfile: Dockerfile
    command:
      bash -c "alembic upgrade head && python3 run_server.py"
    restart:
      always
    ports:
      - 8000:8000
    volumes:
      - storage_data:/app/storage
    depends_on:
      postgres_db:
        condition: service_healthy

  postgres_db:
    container_name: postgres_db
    image: postgres:15.1-alpine
    restart:
      always
    env_file:
      app/.env
    depends_on:
      - rabbitmq
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis_db:
    container_name: redis_db
    image: redis:latest
    depends_on:
      - postgres_db
    restart: always
    env_file:
      - app/.env
    expose:
      - 6379

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    restart:
      always
    env_file:
      app/.env
    ports:
      - "5672:5672"

  worker:
    container_name: worker
    build:
      context: app/
      dockerfile: Dockerfile
    restart:
      always
    command: celery -A restaurant_app.tasks:app_celery worker --loglevel=info
    env_file:
      app/.env
    depends_on:
      - web
      - redis_db
      - rabbitmq
    volumes:
      - storage_data:/app/storage

volumes:
  storage_data:
